class Solution {
public:


    /*Time: O(n^3) Space: O(n)*/
    bool wordBreak(string s, vector<string>& wordDict) {
        
        unordered_set<string> st;
        
        for(auto it: wordDict)
        {
            st.insert(it);
        }
        
        int n = s.size();
        vector<bool> dp(n+1,false);
        dp[0] = true;
        
        for(int i=1;i<=n;i++)
        {
            for(int j=i-1;j>=0;j--)
            {
                if(dp[j])
                {
                    string s1 = s.substr(j,i-j);
                    if(st.find(s1) != st.end())
                    {
                        dp[i] = true;
                        break;
                    }
                }
            }
        }
        
        return dp[n];
    }
};
