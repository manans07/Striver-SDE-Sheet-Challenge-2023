class Solution {
public:
    int search(vector<int>& nums, int target) {
        
        /*Method 1: Brute Force
        // sort(nums.begin(),nums.end());
        
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==target) return i;
        }      
        return -1;*/
        
        
        /*Method 2: Binary Search*/
        
        int n = nums.size();
        int left = 0, right = n-1;
        
        while(left <= right)
        {
            int mid = left + (right-left)/2;
            
            if(nums[mid] == target) return mid;
            
            else if(nums[mid] >= nums[left])
            {
                if(target >= nums[left] && target <= nums[mid])
                {
                    right = mid-1;
                }
                
                else 
                {
                    left = mid+1;
                }
            }
            
            else 
            {
                if(target >= nums[mid] && target <= nums[right])
                {
                    left = mid+1;
                }
                
                else 
                {
                    right = mid-1;
                }
            }
            
        }
        
        return -1;
    }
};
