class Solution {
public:
    
    string say(int n){
        if(n==1)
            return "1";
        string s= say(n-1);
        int len=s.size();
        int i=0;
        int count=0;
        string ans="";
        while(i<len){
            char curr=s[i];
            count++;
            i++;
            while( i<len && s[i]==curr){
                count++;
                i++;
            }
          ans+=  to_string(count) + curr;
            count=0;
        }
        return ans;
    }
    string countAndSay(int n) {
        
        /*if(n==1) return "1";
        else if(n==2) return "11";
        
        string s = "11";
            
        for(int i=3;i<=n;i++)
        {
            int cnt = 1;
            string temp = "";
            s = s+'&';
            for(int j=1;j<s.size();i++)
            {
                if(s[j] != s[j-1])
                {
                    temp += (cnt+'0');
                    temp+=s[j-1];
                    cnt = 1;
                    }
                else cnt++;
                
            }
            s = temp;
        }
    
        return s;*/
        
        if(n == 1)
          return "1";
        if(n == 2)
          return "11";
          
        string str = "11";
        
        for(int i = 3; i <= n; i++)
         {
             str += '$';
             int len = str.length();
             
             int cnt = 1;
             string tmp = "";
             
             for(int j = 1; j < len; j++)
              {
                  if(str[j] != str[j - 1])
                    {
                        tmp += cnt + '0';
                        tmp += str[j - 1];
                        cnt = 1;
                    }
                   else
                     cnt++;
              }
            str = tmp;  
         }
         
        return str;
    }
};
