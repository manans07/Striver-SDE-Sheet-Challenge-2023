class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        
        /* Method 1: Brute Force: T.C = O(N1*N2) + O(N2)  S.C = O(N2)
        int n1 = nums1.size();
        int n2 = nums2.size();
        
        vector<int> ans(n1,-1);
        unordered_map<int,int> mp;
        
        for(int i=0;i<n2;i++)
        {
            mp[nums2[i]] = i;
        }
        
        
        
        for(int i=0;i<n1;i++)
        {
            int ele = nums1[i];
            for(int j=mp[nums1[i]];j<n2;j++)
            {
                if(nums2[j] > ele) 
                {
                    ans[i] = nums2[j];
                    break;
                }
            }
        }
        
            
        return ans;*/
        
        
        /*Method 2: Using stack*/
    
        int n1 = nums1.size();
        int n2 = nums2.size();
        
        vector<int> ans(n1,-1);
        vector<int> nextGreater(n2,-1);
        
        stack<int> st;
        
        /*for(int i=n2-1;i>=0;i--)
        {
            if(st.empty())
            {
                nextGreater[i] = -1;
                st.push(nums2[i]);
            }
            
            else{
                int n = st.top();
                if(nums2[i] < n)
                {
                    ans[i] = nums2[i];
                    st.push(nums2[i]);
                }
                else{
                    
                    while(nums2[i] >= n)
                    {
                        st.pop();
                        if(st.empty())
                        {
                            ans[i] = -1;
                            st.push(nums2[i]);
                            break;
                        }
                        else n = st.top();
                    }
                    
                    if(ans[i] != -1) ans[i] = st.top();
                    
                } 
                
            }
            
        }*/
        
        
        unordered_map<int,int> mp;
        
        for(int i=0;i<n2;i++)
        {
            mp[nums2[i]] = i;
        }
        
        for(int i=0;i<n2;i++)
        {
            while(!st.empty() && nums2[st.top()] < nums2[i])
            {
                nextGreater[st.top()] = i;
                st.pop();
            }
            
            st.push(i);
        }
        
        while(!st.empty())
        {
            nextGreater[st.top()] = -1;
            st.pop();
        }
        
        
        for(int i=0;i<n1;i++)
        {
            if(nextGreater[mp[nums1[i]]] == -1) ans[i] = -1;
            else ans[i] = nums2[nextGreater[mp[nums1[i]]]];
        }
        
        return ans;
  }
};
