class Queue {
  
    stack<int> st1,st2;
    public:
    Queue() {
    
    }

    void enQueue(int val) {
        // Implement the enqueue() function.
        while(!st1.empty()) 
        {
            st2.push(st1.top());
            st1.pop();
        }
        st1.push(val);
        while(!st2.empty()) 
        {
            st1.push(st2.top());
            st2.pop();
        }
    }

    int deQueue() {
        // Implement the dequeue() function.
        if(isEmpty()) return -1;
        int val = st1.top();
        st1.pop();
        return val;
    }

    int peek() {
        // Implement the peek() function here.
        if(isEmpty()) return -1;
        int val = st1.top();
        // st1.pop();
        return val;
    }

    bool isEmpty() {
        // Implement the isEmpty() function here.
        return st1.empty();
    }
};
