Node *findMiddle(Node *head) {
    // Write your code here

    /*Method 1: Count the number of nodes in the linked list and find the middle T.C = O(N) S.C = O(1)
    Node* ptr = head;
    int cnt = 0;
    while(ptr!=nullptr)
        {
         cnt++;
            ptr=ptr->next;
        }
        
        ptr = head;4
        for(int i=0;i<(cnt/2);i++)
        {
            ptr = ptr->next;
                }
        return ptr;*/
    
    /*Method 2: Tortoise-Hare Approach: Using slow and fast pointers  T.C = near to O(N) S.C = O(1)*/

        Node* slow = head;
        Node* fast = head;
        
        
        while(fast && fast->next)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        
        return slow;
        
}

