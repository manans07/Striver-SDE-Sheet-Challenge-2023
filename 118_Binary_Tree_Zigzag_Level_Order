/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        
        vector<vector<int>> res;
        if(!root) return res;

        queue<TreeNode*> q1;
        q1.push(root);
        bool leftToright = true;
        
        while(!q1.empty())
        {
            
            int n = q1.size();
            vector<int> arr(n);
            
            for(int i=0;i<n;i++){
                
                auto it = q1.front();
                q1.pop();
                
                int ind = leftToright == true?i:n-i-1;
                arr[ind] = it->val;
                if(it->left) q1.push(it->left);
                if(it->right) q1.push(it->right);
            }
            leftToright = !(leftToright);
            res.push_back(arr);
            
            
//             if(leftToright) 
//             {
//                 res.push_back(arr);
//                 leftToright = !(leftToright);
//                 }
//             else
//             {
//                 reverse(arr.begin(),arr.end());
//                 leftToright = !(leftToright);
//                 }
            
//             if(it->left)
//             {
//                 q1.push(it->left);
//             }
            
//             if(it->right)
//             {
//                 q1.push(it->right);
//             }
            
        }
        
        return res;
    }
};
