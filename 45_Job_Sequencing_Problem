    static bool cmp(Job j1, Job j2)
    {
        return j1.profit>j2.profit;
    }
    
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        vector<int> ans;
        
        sort(arr,arr+n,cmp);
        int profit=0;
        int maxProfit = 0;
        vector<int> job(n+1,-1);
        int cnt=0;
        
        for(int i=0;i<n;i++)
        {
            int  currProf = arr[i].profit;
            int  currId = arr[i].id;
            int currDead = arr[i].dead;
            
            for(int j=currDead;j>0;j--)
            {
                if(job[j] == -1)
                {
                    cnt++;
                    maxProfit+=currProf;
                    job[j] = currId;
                    break;
                }
            }    
        }
          
        ans.push_back(cnt);
        ans.push_back(maxProfit);
        
        return ans;
    } 
