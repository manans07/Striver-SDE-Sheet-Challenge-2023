#include<bits/stdc++.h>
using namespace std;

bool isPalindrome(string s,int left,int right)
{
    while(left <= right)
    {
        if(s[left] != s[right]) return false;
        left++;
        right--;
    }
    return true;
}


int Solution::solve(string A) {
/*    int n = s.size();
    int cnt = 0;
    int i =0, j=n-1;
    int temp = j;
    
    
    
    /*if(isPalindrome(s,0,n-1)) return 0;
    
    
    for(int i=0;i<n;i++)
    {
        s+=s[i];
        cnt++;
        if(isPalindrome(s,0,s.size()-1)) break;
    }
    
    if(isPalindrome(s,0,s.size()-1))
    {
        for(int i=1;i<n;i++)
        {
            if(s[i] == s[i-1]) cnt--;
        }
    }*/
    
    /*
    while(i<j)
    {
        if(s[i] == s[j])
        {
            i++;
            j--;
        }
        else{
            cnt++;
            i=0;
            j = --temp;
        }
    }    */
    
    
    bool c = false;
    int count = 0;
    int maxi = 0;
    int i = 0;
    int j = A.size()-1;

    

    while(i<j)
    {
        if(A[i]==A[j])
        {
          i++;
          j--;
        }
        else 
        {
            if(c==false)
            {
                count++;
            }
            else{
                i = 0;
                count = A.size()-j;
            }

            j--;
        }

        maxi=max(maxi,count);

        if(j<A.size()-1)
        {
            if(A[j]!=A[j+1]) c = true;
        }
    }
    return count;
}
