#include <bits/stdc++.h>

int findDuplicate(vector<int> &arr, int n){
	// Write your code here.

/*	Method 1: Using sorting 

	sort(arr.begin(),arr.end());

	for(int i=0;i<n-1;i++)
	{
		if(arr[i] == arr[i+1]) return arr[i];
	}

	return -1;
*/

/*	Method 2: Using Hashing. T.C = O(N) S.C = O(N)

	unordered_map<int,int> mp;

	for(auto it:arr)
	{
		mp[it]++;
	}



	for(auto it:mp)
	{
		if(it.second>1) return it.first;

	}

	return -1;*/


/* Method 3: Using slow and fast pointers. T.C= O(N) S.C=O(1) */ 

	int slow =1,fast=1;
	slow = arr[0];
	fast=arr[0];

	do
	{
		slow = arr[slow];
		fast = arr[arr[fast]];
	}while(slow!=fast);

	fast = arr[0];

	while(slow!=fast)
	{
		slow=arr[slow];
		fast=arr[fast];
	}

	return slow;
}
