/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
   
public:

    /* Time: O(N)*log(N)  Space: O(N)*/
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        
        queue<pair<TreeNode*,pair<int,int>>> q1;
        map<int,map<int,multiset<int>>> mp;
        
        q1.push({root,{0,0}});
        
        while(!q1.empty())
        {
            auto it = q1.front();
            q1.pop();
            
            int x = it.second.first;
            int y = it.second.second;
            
            mp[x][y].insert(it.first->val);
            
            if(it.first->left)
            {
                q1.push({it.first->left,{x-1,y+1}});
                    }
            if(it.first->right)
            {
                q1.push({it.first->right,{x+1,y+1}});
                    }
        }
        
        vector<vector<int>> ans;
        
        for(auto it:mp)
        {
            vector<int> temp;
            for(auto it1:it.second)
            {
                /*vector<int> temp(it1.second.begin(),it1.second.end());
                ans.push_back(temp);*/
                temp.insert(temp.end(),it1.second.begin(),it1.second.end());
                }
            ans.push_back(temp);
        }
              
        return ans;
   
    }
};
