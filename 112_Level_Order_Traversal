/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:


    /*Time: O(N^2) for this question, O(N) in general  Space: O(N) in general*/
    vector<vector<int>> levelOrder(TreeNode* root) {
    
        vector<vector<int>> v;
        if(!root) return v;
        queue<TreeNode*> q1;
        q1.push(root);
        
        while(!q1.empty())
        {
            
            vector<int> temp;
            int n = q1.size();
            for(int i=0;i<n;i++)
            {
                auto it=q1.front();
                temp.push_back(it->val);
                q1.pop();
                if(it->left)
                {
                    q1.push(it->left);
                }
                if(it->right)
                {
                    q1.push(it->right);
                }
            }
            v.push_back(temp);
        }
        
        
        return v;      
    }
};
