class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        
        /*Method 1: Brute Force T.C = O(N*N) S.C = O(1)
        int n = nums.size();
        int ans = 0;
        for(int i=0;i<n;i++)
        {
            int currstreak = 0;
            
            if(nums[i] == 1)
            {
                int j=i;
                while(j<n && nums[j++] == 1)
                {
                    currstreak++;
                }
                ans = max(ans,currstreak);
            }
            
            
        }
        return ans;*/
        
        /*Method 2: Count*/
        
        int cnt = 0;
        int ans = 0;
        int n = nums.size();
        for(int i=0;i<n;i++)
        {
            if(nums[i] == 1) cnt++;
            else cnt=0;
            ans = max(cnt,ans);
        }
        
        return ans;
        
    }
};

/*Code Studio:

int longestSubSeg(vector<int> &arr , int n, int k){
    // Write your code here.
    int maxi = 0;
    int cnt0 = 0;
    
    for(int i = 0, j = 0; i < n; i++){
        if(arr[i] == 0){
            cnt0++;
        }


        while(cnt0 > k){
           if(arr[j] == 0){
               cnt0--;
           }
           j++;
        }

        maxi = max(maxi, i-j+1);
    }
    return maxi;
}




*/

