#include <bits/stdc++.h>

void setZeros(vector<vector<int>> &matrix)
{
	// Write your code here.

/*	Brute Force Approach

	int n = matrix.size();
	int m = matrix[0].size();
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(matrix[i][j] == 0)
			{
				
				for(int i1=0;i1<n;i1++)
				{
					if(matrix[i1][j] !=0) matrix[i1][j]=-1;
				} 
				
				for(int j1=0;j1<m;j1++)
				{
					if(matrix[i][j1] !=0) matrix[i][j1]=-1;
				} 

			}
		}
	}

	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(matrix[i][j] == -1)
			{
					matrix[i][j] = 0;
			}
		}
	}
*/

/*	Dummy Array Approach

	int n = matrix.size();
	int m = matrix[0].size();

	vector<int> r(n,-1);
	vector<int> c(m,-1);
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(matrix[i][j] == 0)
			{
				r[i]=0;
				c[j]=0;
			}
		}
	}

	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(r[i] == 0 || c[j] == 0)
			{
				matrix[i][j] = 0;
			}

		}
	}
*/

	int n = matrix.size();
	int m = matrix[0].size();
	bool m1 = true;


	for(int i=0;i<n;i++)
	{
		if(matrix[i][0] == 0) m1 = false;
		for(int j=1;j<m;j++)
		{
			if(matrix[i][j] == 0)
			{
				matrix[i][0]=0;
				matrix[0][j] = 0;
			}
		} 
	}
	

	for(int i=n-1;i>=0;i--)
	{
		for(int j=m-1;j>=1;j--)
		{
			if(matrix[i][0] == 0 || matrix[0][j] == 0)
			{
				matrix[i][j]=0;
			}
			if(m1==false) matrix[i][0] = 0;
		}
	}


}
