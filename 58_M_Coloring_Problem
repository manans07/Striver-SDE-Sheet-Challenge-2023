#include<bits/stdc++.h>


/*T.C = O(N^M)  S.C = O(N) + O(N) (Auxilliary Space)*/
bool isSafe(int vertex,vector<vector<int>> &mat,int n,vector<int>& color,int col)
{
    for(int i=0;i<n;i++)
    {
        if(i!=vertex && mat[i][vertex] == 1 && color[i] == col) return false;
    }
    return true;
}

bool solve(int vertex,vector<vector<int>> &mat,int n,vector<int>& color,int m)
{
    if(vertex == n){
        return true;
    }

    for(int k=1;k<=m;k++)
    {
        if(isSafe(vertex,mat,n,color,k))
        {
            color[vertex] = k;
            if(solve(vertex+1,mat,n,color,m)) return true;
            color[vertex] = 0;
        }
    }
    return false;
}

string graphColoring(vector<vector<int>> &mat, int m) {
    // Write your code here

    int n = mat.size();
    vector<int> color(n,0);
    if(solve(0,mat,n,color,m)) return "YES";
    return "NO";

}
